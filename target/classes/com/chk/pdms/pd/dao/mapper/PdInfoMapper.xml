<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chk.pdms.pd.dao.mapper.PdInfoMapper">
  <resultMap id="BaseResultMap" type="com.chk.pdms.pd.domain.PdInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="pd_model_id" jdbcType="BIGINT" property="pdModelId" />
    <result column="std" jdbcType="VARCHAR" property="std" />
    <result column="quality" jdbcType="VARCHAR" property="quality" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="size" jdbcType="VARCHAR" property="size" />
    <result column="temperature" jdbcType="VARCHAR" property="temperature" />
    <result column="voltage" jdbcType="VARCHAR" property="voltage" />
    <result column="capacity_min" jdbcType="VARCHAR" property="capacityMin" />
    <result column="capacity_max" jdbcType="VARCHAR" property="capacityMax" />
    <result column="capacity_min_idx" jdbcType="INTEGER" property="capacityMinIdx" />
    <result column="capacity_max_idx" jdbcType="INTEGER" property="capacityMaxIdx" />
    <result column="tolerance" jdbcType="VARCHAR" property="tolerance" />
    <result column="outlet" jdbcType="VARCHAR" property="outlet" />
    <result column="elec_code" jdbcType="VARCHAR" property="elecCode" />
    <result column="cap_num" jdbcType="VARCHAR" property="capNum" />
    <result column="elec_type" jdbcType="VARCHAR" property="elecType" />
    <result column="temper_range" jdbcType="VARCHAR" property="temperRange" />
    <result column="wire_ma" jdbcType="VARCHAR" property="wireMa" />
    <result column="wire_size" jdbcType="VARCHAR" property="wireSize" />
    <result column="elec_ser" jdbcType="VARCHAR" property="elecSer" />
    <result column="soc_str" jdbcType="VARCHAR" property="socStr" />
    <result column="pack_type" jdbcType="VARCHAR" property="packType" />
    <result column="pin" jdbcType="VARCHAR" property="pin" />
    <result column="search_key" jdbcType="VARCHAR" property="searchKey" />

    <result column="surface_code" jdbcType="VARCHAR" property="surfaceCode" />
    <result column="thickness_code" jdbcType="VARCHAR" property="thicknessCode" />
    <result column="length_width_code" jdbcType="VARCHAR" property="lengthWidthCode" />
    <result column="material_code" jdbcType="VARCHAR" property="materialCode" />
    <result column="center_frequency" jdbcType="VARCHAR" property="centerFrequency" />
    <result column="pass_band_range" jdbcType="VARCHAR" property="passBandRange" />
    <result column="other" jdbcType="VARCHAR" property="other" />
    <result column="out_of_band_rejection" jdbcType="VARCHAR" property="outOfBandRejection" />
    <result column="ripple" jdbcType="VARCHAR" property="ripple" />
    <result column="power_capacity" jdbcType="VARCHAR" property="powerCapacity" />
    <result column="vswr" jdbcType="VARCHAR" property="vswr" />
    <result column="amplitude_balance" jdbcType="VARCHAR" property="amplitudeBalance" />
    <result column="phase_balance" jdbcType="VARCHAR" property="phaseBalance" />
    <result column="insertion_loss" jdbcType="VARCHAR" property="insertionLoss" />
    <result column="isolation" jdbcType="VARCHAR" property="isolation" />
    <result column="frequency_range" jdbcType="VARCHAR" property="frequencyRange" />
    <result column="vswr_stop_band" jdbcType="VARCHAR" property="vswrStopBand" />
    <result column="vswr_pass_Band" jdbcType="VARCHAR" property="vswrPassBand" />
    <result column="stop_band" jdbcType="VARCHAR" property="stopBand" />
    <result column="cut_off_frequency" jdbcType="VARCHAR" property="cutOffFrequency" />
    <result column="pass_band_insertion_loss" jdbcType="VARCHAR" property="passBandInsertionLoss" />
    <result column="breakdown_voltage" jdbcType="VARCHAR" property="breakdownVoltage" />
    <result column="insulation_resistance" jdbcType="VARCHAR" property="insulationResistance" />
    <result column="flexure_strength" jdbcType="VARCHAR" property="flexureStrength" />
    <result column="dielectric_loss_by20G" jdbcType="VARCHAR" property="dielectricLossBy20G" />
    <result column="dielectric_loss_by1_9G" jdbcType="VARCHAR" property="dielectricLossBy1_9G" />
    <result column="permittivity_by15G" jdbcType="VARCHAR" property="permittivityBy15G" />
    <result column="permittivity_by1_9G" jdbcType="VARCHAR" property="permittivityBy1_9G" />

    <result column="dielectric_strength" jdbcType="VARCHAR" property="dielectricStrength" />
    <result column="insulation_resistance_by125" jdbcType="VARCHAR" property="insulationResistanceBy125" />
    <result column="insulation_resistance_by25" jdbcType="VARCHAR" property="insulationResistanceBy25" />
    <result column="temperature_alteration_ratio" jdbcType="VARCHAR" property="temperatureAlterationRatio" />
    <result column="dielectric_loss_by1MHz" jdbcType="VARCHAR" property="dielectricLossBy1MHz" />
    <result column="permittivity" jdbcType="VARCHAR" property="permittivity" />
    <result column="powder_density" jdbcType="VARCHAR" property="powderDensity" />
    <result column="specific_surfaceArea" jdbcType="VARCHAR" property="specificSurfacearea" />
    <result column="d90" jdbcType="VARCHAR" property="D90" />
    <result column="d50" jdbcType="VARCHAR" property="D50" />
    <result column="d10" jdbcType="VARCHAR" property="D10" />
    <result column="sintering_temperature" jdbcType="VARCHAR" property="sinteringTemperature" />
    <result column="soaking_time" jdbcType="VARCHAR" property="soakingTime" />
    <result column="performance" jdbcType="VARCHAR" property="performance" />
    <result column="pad_metallurgy" jdbcType="VARCHAR" property="padMetallurgy" />

    <result column="searchType" jdbcType="INTEGER" property="search_type"/>

  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, pd_model_id, std, quality, model, size, temperature, voltage, capacity_min, capacity_max, 
    capacity_min_idx, capacity_max_idx, tolerance, outlet, elec_code, cap_num, elec_type, 
    temper_range, wire_ma, wire_size, elec_ser, soc_str, pack_type, pin, search_key,
  </sql>

  <sql id="ext_Column_List">
    breakdown_voltage,insulation_resistance,flexure_strength,dielectric_loss_by20G,   dielectric_loss_by1_9G,
    permittivity_by15G,permittivity_by1_9G,vswr_pass_band,    vswr_stop_band,stop_band,
    cut_off_frequency,pass_band_insertion_loss,isolation,insertion_loss,    phase_balance,
    amplitude_balance,vswr,power_capacity,pass_band_range,ripple,
    out_of_band_rejection,    other,center_frequency,bandwidth,surface_code,
    thickness_code,length_width_code,material_code,  frequency_range,dielectric_strength,
    insulation_resistance_by125, insulation_resistance_by25,   temperature_alteration_ratio, dielectric_loss_by1MHz, permittivity,
    powder_density,     specific_surfaceArea, d90, d50, d10,
    sintering_temperature, soaking_time, performance,pad_metallurgy,search_type

  </sql>
  <select id="selectByExample" parameterType="com.chk.pdms.pd.domain.PdInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    <include refid="ext_Column_List" />
    from pd_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    <include refid="ext_Column_List" />
    from pd_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from pd_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.chk.pdms.pd.domain.PdInfoExample">
    delete from pd_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chk.pdms.pd.domain.PdInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pd_info (pd_model_id, std, quality, 
      model, size, temperature, 
      voltage, capacity_min, capacity_max, 
      capacity_min_idx, capacity_max_idx, tolerance, 
      outlet, elec_code, cap_num, 
      elec_type, temper_range, wire_ma, 
      wire_size, elec_ser, soc_str, 
      pack_type, pin, search_key
      )
    values (#{pdModelId,jdbcType=BIGINT}, #{std,jdbcType=VARCHAR}, #{quality,jdbcType=VARCHAR}, 
      #{model,jdbcType=VARCHAR}, #{size,jdbcType=VARCHAR}, #{temperature,jdbcType=VARCHAR}, 
      #{voltage,jdbcType=VARCHAR}, #{capacityMin,jdbcType=VARCHAR}, #{capacityMax,jdbcType=VARCHAR}, 
      #{capacityMinIdx,jdbcType=INTEGER}, #{capacityMaxIdx,jdbcType=INTEGER}, #{tolerance,jdbcType=VARCHAR}, 
      #{outlet,jdbcType=VARCHAR}, #{elecCode,jdbcType=VARCHAR}, #{capNum,jdbcType=VARCHAR}, 
      #{elecType,jdbcType=VARCHAR}, #{temperRange,jdbcType=VARCHAR}, #{wireMa,jdbcType=VARCHAR}, 
      #{wireSize,jdbcType=VARCHAR}, #{elecSer,jdbcType=VARCHAR}, #{socStr,jdbcType=VARCHAR}, 
      #{packType,jdbcType=VARCHAR}, #{pin,jdbcType=VARCHAR}, #{searchKey,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.chk.pdms.pd.domain.PdInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pd_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pdModelId != null">
        pd_model_id,
      </if>
      <if test="std != null">
        std,
      </if>
      <if test="quality != null">
        quality,
      </if>
      <if test="model != null">
        model,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="temperature != null">
        temperature,
      </if>
      <if test="voltage != null">
        voltage,
      </if>
      <if test="capacityMin != null">
        capacity_min,
      </if>
      <if test="capacityMax != null">
        capacity_max,
      </if>
      <if test="capacityMinIdx != null">
        capacity_min_idx,
      </if>
      <if test="capacityMaxIdx != null">
        capacity_max_idx,
      </if>
      <if test="tolerance != null">
        tolerance,
      </if>
      <if test="outlet != null">
        outlet,
      </if>
      <if test="elecCode != null">
        elec_code,
      </if>
      <if test="capNum != null">
        cap_num,
      </if>
      <if test="elecType != null">
        elec_type,
      </if>
      <if test="temperRange != null">
        temper_range,
      </if>
      <if test="wireMa != null">
        wire_ma,
      </if>
      <if test="wireSize != null">
        wire_size,
      </if>
      <if test="elecSer != null">
        elec_ser,
      </if>
      <if test="socStr != null">
        soc_str,
      </if>
      <if test="packType != null">
        pack_type,
      </if>
      <if test="pin != null">
        pin,
      </if>
      <if test="searchKey != null">
        search_key,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pdModelId != null">
        #{pdModelId,jdbcType=BIGINT},
      </if>
      <if test="std != null">
        #{std,jdbcType=VARCHAR},
      </if>
      <if test="quality != null">
        #{quality,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        #{size,jdbcType=VARCHAR},
      </if>
      <if test="temperature != null">
        #{temperature,jdbcType=VARCHAR},
      </if>
      <if test="voltage != null">
        #{voltage,jdbcType=VARCHAR},
      </if>
      <if test="capacityMin != null">
        #{capacityMin,jdbcType=VARCHAR},
      </if>
      <if test="capacityMax != null">
        #{capacityMax,jdbcType=VARCHAR},
      </if>
      <if test="capacityMinIdx != null">
        #{capacityMinIdx,jdbcType=INTEGER},
      </if>
      <if test="capacityMaxIdx != null">
        #{capacityMaxIdx,jdbcType=INTEGER},
      </if>
      <if test="tolerance != null">
        #{tolerance,jdbcType=VARCHAR},
      </if>
      <if test="outlet != null">
        #{outlet,jdbcType=VARCHAR},
      </if>
      <if test="elecCode != null">
        #{elecCode,jdbcType=VARCHAR},
      </if>
      <if test="capNum != null">
        #{capNum,jdbcType=VARCHAR},
      </if>
      <if test="elecType != null">
        #{elecType,jdbcType=VARCHAR},
      </if>
      <if test="temperRange != null">
        #{temperRange,jdbcType=VARCHAR},
      </if>
      <if test="wireMa != null">
        #{wireMa,jdbcType=VARCHAR},
      </if>
      <if test="wireSize != null">
        #{wireSize,jdbcType=VARCHAR},
      </if>
      <if test="elecSer != null">
        #{elecSer,jdbcType=VARCHAR},
      </if>
      <if test="socStr != null">
        #{socStr,jdbcType=VARCHAR},
      </if>
      <if test="packType != null">
        #{packType,jdbcType=VARCHAR},
      </if>
      <if test="pin != null">
        #{pin,jdbcType=VARCHAR},
      </if>
      <if test="searchKey != null">
        #{searchKey,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chk.pdms.pd.domain.PdInfoExample" resultType="java.lang.Long">
    select count(*) from pd_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pd_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.pdModelId != null">
        pd_model_id = #{record.pdModelId,jdbcType=BIGINT},
      </if>
      <if test="record.std != null">
        std = #{record.std,jdbcType=VARCHAR},
      </if>
      <if test="record.quality != null">
        quality = #{record.quality,jdbcType=VARCHAR},
      </if>
      <if test="record.model != null">
        model = #{record.model,jdbcType=VARCHAR},
      </if>
      <if test="record.size != null">
        size = #{record.size,jdbcType=VARCHAR},
      </if>
      <if test="record.temperature != null">
        temperature = #{record.temperature,jdbcType=VARCHAR},
      </if>
      <if test="record.voltage != null">
        voltage = #{record.voltage,jdbcType=VARCHAR},
      </if>
      <if test="record.capacityMin != null">
        capacity_min = #{record.capacityMin,jdbcType=VARCHAR},
      </if>
      <if test="record.capacityMax != null">
        capacity_max = #{record.capacityMax,jdbcType=VARCHAR},
      </if>
      <if test="record.capacityMinIdx != null">
        capacity_min_idx = #{record.capacityMinIdx,jdbcType=INTEGER},
      </if>
      <if test="record.capacityMaxIdx != null">
        capacity_max_idx = #{record.capacityMaxIdx,jdbcType=INTEGER},
      </if>
      <if test="record.tolerance != null">
        tolerance = #{record.tolerance,jdbcType=VARCHAR},
      </if>
      <if test="record.outlet != null">
        outlet = #{record.outlet,jdbcType=VARCHAR},
      </if>
      <if test="record.elecCode != null">
        elec_code = #{record.elecCode,jdbcType=VARCHAR},
      </if>
      <if test="record.capNum != null">
        cap_num = #{record.capNum,jdbcType=VARCHAR},
      </if>
      <if test="record.elecType != null">
        elec_type = #{record.elecType,jdbcType=VARCHAR},
      </if>
      <if test="record.temperRange != null">
        temper_range = #{record.temperRange,jdbcType=VARCHAR},
      </if>
      <if test="record.wireMa != null">
        wire_ma = #{record.wireMa,jdbcType=VARCHAR},
      </if>
      <if test="record.wireSize != null">
        wire_size = #{record.wireSize,jdbcType=VARCHAR},
      </if>
      <if test="record.elecSer != null">
        elec_ser = #{record.elecSer,jdbcType=VARCHAR},
      </if>
      <if test="record.socStr != null">
        soc_str = #{record.socStr,jdbcType=VARCHAR},
      </if>
      <if test="record.packType != null">
        pack_type = #{record.packType,jdbcType=VARCHAR},
      </if>
      <if test="record.pin != null">
        pin = #{record.pin,jdbcType=VARCHAR},
      </if>
      <if test="record.searchKey != null">
        search_key = #{record.searchKey,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pd_info
    set id = #{record.id,jdbcType=BIGINT},
      pd_model_id = #{record.pdModelId,jdbcType=BIGINT},
      std = #{record.std,jdbcType=VARCHAR},
      quality = #{record.quality,jdbcType=VARCHAR},
      model = #{record.model,jdbcType=VARCHAR},
      size = #{record.size,jdbcType=VARCHAR},
      temperature = #{record.temperature,jdbcType=VARCHAR},
      voltage = #{record.voltage,jdbcType=VARCHAR},
      capacity_min = #{record.capacityMin,jdbcType=VARCHAR},
      capacity_max = #{record.capacityMax,jdbcType=VARCHAR},
      capacity_min_idx = #{record.capacityMinIdx,jdbcType=INTEGER},
      capacity_max_idx = #{record.capacityMaxIdx,jdbcType=INTEGER},
      tolerance = #{record.tolerance,jdbcType=VARCHAR},
      outlet = #{record.outlet,jdbcType=VARCHAR},
      elec_code = #{record.elecCode,jdbcType=VARCHAR},
      cap_num = #{record.capNum,jdbcType=VARCHAR},
      elec_type = #{record.elecType,jdbcType=VARCHAR},
      temper_range = #{record.temperRange,jdbcType=VARCHAR},
      wire_ma = #{record.wireMa,jdbcType=VARCHAR},
      wire_size = #{record.wireSize,jdbcType=VARCHAR},
      elec_ser = #{record.elecSer,jdbcType=VARCHAR},
      soc_str = #{record.socStr,jdbcType=VARCHAR},
      pack_type = #{record.packType,jdbcType=VARCHAR},
      pin = #{record.pin,jdbcType=VARCHAR},
      search_key = #{record.searchKey,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chk.pdms.pd.domain.PdInfo">
    update pd_info
    <set>
      <if test="pdModelId != null">
        pd_model_id = #{pdModelId,jdbcType=BIGINT},
      </if>
      <if test="std != null">
        std = #{std,jdbcType=VARCHAR},
      </if>
      <if test="quality != null">
        quality = #{quality,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=VARCHAR},
      </if>
      <if test="temperature != null">
        temperature = #{temperature,jdbcType=VARCHAR},
      </if>
      <if test="voltage != null">
        voltage = #{voltage,jdbcType=VARCHAR},
      </if>
      <if test="capacityMin != null">
        capacity_min = #{capacityMin,jdbcType=VARCHAR},
      </if>
      <if test="capacityMax != null">
        capacity_max = #{capacityMax,jdbcType=VARCHAR},
      </if>
      <if test="capacityMinIdx != null">
        capacity_min_idx = #{capacityMinIdx,jdbcType=INTEGER},
      </if>
      <if test="capacityMaxIdx != null">
        capacity_max_idx = #{capacityMaxIdx,jdbcType=INTEGER},
      </if>
      <if test="tolerance != null">
        tolerance = #{tolerance,jdbcType=VARCHAR},
      </if>
      <if test="outlet != null">
        outlet = #{outlet,jdbcType=VARCHAR},
      </if>
      <if test="elecCode != null">
        elec_code = #{elecCode,jdbcType=VARCHAR},
      </if>
      <if test="capNum != null">
        cap_num = #{capNum,jdbcType=VARCHAR},
      </if>
      <if test="elecType != null">
        elec_type = #{elecType,jdbcType=VARCHAR},
      </if>
      <if test="temperRange != null">
        temper_range = #{temperRange,jdbcType=VARCHAR},
      </if>
      <if test="wireMa != null">
        wire_ma = #{wireMa,jdbcType=VARCHAR},
      </if>
      <if test="wireSize != null">
        wire_size = #{wireSize,jdbcType=VARCHAR},
      </if>
      <if test="elecSer != null">
        elec_ser = #{elecSer,jdbcType=VARCHAR},
      </if>
      <if test="socStr != null">
        soc_str = #{socStr,jdbcType=VARCHAR},
      </if>
      <if test="packType != null">
        pack_type = #{packType,jdbcType=VARCHAR},
      </if>
      <if test="pin != null">
        pin = #{pin,jdbcType=VARCHAR},
      </if>
      <if test="searchKey != null">
        search_key = #{searchKey,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chk.pdms.pd.domain.PdInfo">
    update pd_info
    set pd_model_id = #{pdModelId,jdbcType=BIGINT},
      std = #{std,jdbcType=VARCHAR},
      quality = #{quality,jdbcType=VARCHAR},
      model = #{model,jdbcType=VARCHAR},
      size = #{size,jdbcType=VARCHAR},
      temperature = #{temperature,jdbcType=VARCHAR},
      voltage = #{voltage,jdbcType=VARCHAR},
      capacity_min = #{capacityMin,jdbcType=VARCHAR},
      capacity_max = #{capacityMax,jdbcType=VARCHAR},
      capacity_min_idx = #{capacityMinIdx,jdbcType=INTEGER},
      capacity_max_idx = #{capacityMaxIdx,jdbcType=INTEGER},
      tolerance = #{tolerance,jdbcType=VARCHAR},
      outlet = #{outlet,jdbcType=VARCHAR},
      elec_code = #{elecCode,jdbcType=VARCHAR},
      cap_num = #{capNum,jdbcType=VARCHAR},
      elec_type = #{elecType,jdbcType=VARCHAR},
      temper_range = #{temperRange,jdbcType=VARCHAR},
      wire_ma = #{wireMa,jdbcType=VARCHAR},
      wire_size = #{wireSize,jdbcType=VARCHAR},
      elec_ser = #{elecSer,jdbcType=VARCHAR},
      soc_str = #{socStr,jdbcType=VARCHAR},
      pack_type = #{packType,jdbcType=VARCHAR},
      pin = #{pin,jdbcType=VARCHAR},
      search_key = #{searchKey,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.chk.pdms.pd.domain.PdInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    <include refid="ext_Column_List" />
    from pd_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>